# -*- coding: utf-8 -*-
"""HW5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EkGBhCtmw1xQ5MpmNlYHHstrxXZJ-n-2
"""

import numpy as np
import math

aw1 = np.pi/2
ax1 = 1
aw2 = np.pi/2
ax2 = 2

aw = [[2, 1, 2], [1, 3, 1], [7, 4, 7]]
ax = [[-1], [0], [1]]

def f(a, b, c, d):
    return 1 / (2 + (np.sin(a*b))**2 + np.cos(c*d))

def f2(w, x):
    result = [[0], [0], [0]]
    for i in range(len(w)):
        for j in range(len(x[0])):
            for k in range(len(x)):
                result[i][j] += w[i][k] * x[k][j]
    return result

def backPropogation1(upstream):

    # initial upstream gradient
    upstream = 1

    # 1/x gradient change
    upstream = upstream/(-1*(1/(2**2)))

    # +2 gradient change
    upstream = upstream

    # + gradient change
    upstreamHigh = upstream
    upstreamLow = upstream

    #x^2 gradient change
    upstreamHigh = upstreamHigh * 2

    #cos gradient change
    upstreamLow = upstreamLow * (-1 * np.sin(np.pi))

    #sin gradient change
    upstreamHigh = upstreamHigh * (np.cos(np.pi/2))

    # * gradient change (FINAL RESULT)
    w1 = round(upstreamHigh * 1)
    x1 = round(upstreamHigh * (np.pi/2))
    w2 = round(upstreamLow * 2)
    x2 = round(upstreamLow * (np.pi/2))

    return w1, x1, w2, x2

def backPropogation2(upstream):

    # initial upstream gradient
    upstream = [[1], [1], [1]]

    # * gradient change (FINAL RESULT)
    xT = [[-1, 0, 1]]
    w = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]
    for i in range(len(upstream)):
        for j in range(len(xT[0])):
            for k in range(len(xT)):
                w[i][j] += upstream[i][k] * xT[k][j]

    wT = [[2, 1, 7], [1, 3, 4], [2, 1, 7]]
    x = [[0], [0], [0]]
    for i in range(len(wT)):
        for j in range(len(x[0])):
            for k in range(len(x)):
                x[i][j] += wT[i][k] * upstream[k][j]

    return w, x


rW1 = 0
rX1 = 0
rW2 = 0
rX2 = 0

print("Problem 1")
print("Starting Equation: 1 / ( 2+sin^2(w1x1) + cos(w2x2) )")
print("Forward Propogation Result: ")
print(f(aw1, ax1, aw2, ax2))

print("Back Propogation Result: ")
rW1, rX1, rW2, rX2 = backPropogation1(1)

print("w1: " + str(rW1))
print("x1: " + str(rX1))
print("w2: " + str(rW2))
print("x2: " + str(rX2) + "\n")

print("Problem 2")
print("Starting Equation: f(x,W) = Wx")
print("Forward Propogation Result: ")
print(f2(aw, ax))

print("Back Propogation Result: ")
finW, finX = backPropogation2([[1], [1], [1]])

print("W: " + str(finW))
print("X: " + str(finX))