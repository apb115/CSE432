# -*- coding: utf-8 -*-
"""Copy of CSE432/532 Machine Learning HW1 Coding part.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qeSBU7CiYsbgpIu4oFbcii2fXKG2NPcA

# Before coding: Check this example

Please read the following code to check how to create/visit a vector/matrix in Python. Please pay attention to how to differenciate a row vector and column vector in a 2-D list. Then, you can start the coding question Q1 and Q2.
"""

from typing import Sized

# ==========Example 1=================
a=[[1,2,3,4]]
print(len(a))

b=[[1],[2],[3]]
print(len(b))

print(a)
print(b)

print(a[0])
print(b[0])

print(a[0][0])
print(b[0][0])


# ==========Example 2=================
c=[[1,2],[3,4],[5,6]]
print(c)

print(len(c))
print(len(c[0]))
print(c)
print(c[0])
print(c[0][0])

"""# Q1 Design a class for vector(20):

- The class name is VecGen

- When you create the object, you will initiate it with a vector, i.e., this vector class contains one vector. (35%)

- This class can calculate and return the distance between this vector and a given vector. If the other vector is not given or you can not calculate the distance, it returns its magnitudes. (65%)
"""

# add your code below to design the class:
import math

class VecGen:
  def __init__(self, vector):
    self.vector = vector

  def DisCal(self, vector2=[0]):
    if len(self.vector) != len(vector2):
      return 0
    answer = 0
    if len(vector2) > 1 and vector2[0] != 0:
      count = 0
      for x in self.vector:
        answer = answer + (x-vector2[count])*(x-vector2[count])
        count = count + 1
    else:
      for x in self.vector:
        answer = answer + x*x
    return math.sqrt(answer)

# test your code below (do not change the code below)
Vec1=VecGen([1,2,3,4,5])

Vec1.DisCal()

Vec1.DisCal([1,2,3])

Vec1.DisCal([4,5,6,7,8])

"""# Q2 Please design a function to calculate the matrix multiplication (40)

- you need to design a matrix multiplication function "MaxProduct()"

- There are two inputs (A,B) and one ouput (the production of the two input A*B).

- Assume all the inputs and test cases are orgnized in the format of 2-D array, i.e., row vector is a matrix with only 1 row and colomn vector is a matrix with only 1 column.

## Rubric:

- Assume the inputs are both matrix, you need to first check if the demension of the two matrix meets the requirment or not. If so, you will calculation the multiplication of the two. Otherwise please display the error info.(Basic 60%)


- Assume one of the input could be a vector, you need to make sure your code could also work. (20%)


- Assume both of the inputs could be vector, you need to make sure your code could also work (20%)
"""

import math
def MaxProduct(A,B):
  # Please add your code below
  c = 0
  if len(A[0]) != len(B):
    return 0
  else:
    c = [[0]*len(B[0]) for i in range(len(A))]

    # for i in range(len(A)):
    #   for j in range(len(B[0])):
    #     c[i][j] = (a[i][j] * b[j][i]) + (a[i][j] * b[j][i])

    for i in range(len(A)):
      for j in range(len(B[0])):
        for k in range(len(A[0])):
          c[i][j] = c[i][j] + (A[i][k] * B[k][j])

    return c


# do not change the following code. Please use the following code to test your code.
a=[[1,2],[3,4],[5,6],[7,8]]
b=[[1,2,3],[1,2,3]]
c=[[1,2,3]]
d=[[1],[2]]
e=[[2,3,4,5,6]]

print(MaxProduct(a,b))
print(MaxProduct(b,a))
print(MaxProduct(a,c))
print(MaxProduct(a,d))
print(MaxProduct(c,a))
print(MaxProduct(d,c))
print(MaxProduct(b,e))
print(MaxProduct(e,d))